name: Build and Deploy Docker Images to EC2

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create .env file
        run: |
          echo "DATABASE_HOST=$DATABASE_HOST" >> .env
          echo "DATABASE_PORT=$DATABASE_PORT" >> .env
          echo "DATABASE_USER=$DATABASE_USER" >> .env
          echo "DATABASE_PASSWORD=$DATABASE_PASSWORD" >> .env
          echo "DATABASE_NAME=$DATABASE_NAME" >> .env

      - name: Login to Docker Hub
        run: echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Build and push client Docker image
        working-directory: ./client
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/dailydeeds_client:latest .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/dailydeeds_client:latest

      - name: Build and push server Docker image
        working-directory: ./server
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/dailydeeds_server:latest .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/dailydeeds_server:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Setup Docker
        uses: actions/setup-docker@v3
        with:
          docker_version: 'latest'

      - name: Connect to EC2
        uses: actions/aws-cli@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          region: eu-west-2b

      - name: Upload Docker Compose file
        uses: actions/upload-artifact@v3
        with:
          name: docker-compose.yml
          path: docker-compose.yml

      - name: Upload .env file
        uses: actions/upload-artifact@v3
        with:
          name: .env
          path: .env

      - name: Down existing Docker images
        run: docker-compose down

      - name: Up new Docker images
        run: docker-compose up -d





# name: Build and Deploy Docker Images

# on:
#   push:
#     branches:
#       - master

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Login to Docker Hub
#         run: echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

#       - name: Build and push client Docker image
#         working-directory: ./client
#         run: |
#           docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/dailydeeds_client:latest .
#           docker push ${{ secrets.DOCKERHUB_USERNAME }}/dailydeeds_client:latest

#       - name: Build and push server Docker image
#         working-directory: ./server
#         run: |
#           docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/dailydeeds_server:latest .
#           docker push ${{ secrets.DOCKERHUB_USERNAME }}/dailydeeds_server:latest

#   deploy:
#     runs-on: ubuntu-latest
#     needs: build

#     steps:
#       - name: Setup Docker
#         uses: actions/setup-docker@v2
#         with:
#           docker_version: "latest"

#       - name: Connect to EC2
#         uses: actions/aws-cli@v3
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           region: us-east-1

#       - name: Upload Docker Compose file
#         uses: actions/upload-artifact@v3
#         with:
#           name: docker-compose.yml
#           path: docker-compose.yml

#       - name: Run Docker Compose
#         run: |
#           docker-compose up -d

# name: Build and Push Docker Images

# on:
#   push:
#     branches:
#       - master

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Login to Docker Hub
#         run: echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

#       - name: Build and push client Docker image
#         working-directory: ./client
#         run: |
#           docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/dailydeeds_client:latest .
#           docker push ${{ secrets.DOCKERHUB_USERNAME }}/dailydeeds_client:latest

#       - name: Build and push server Docker image
#         working-directory: ./server
#         run: |
#           docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/dailydeeds_server:latest .
#           docker push ${{ secrets.DOCKERHUB_USERNAME }}/dailydeeds_server:latest
