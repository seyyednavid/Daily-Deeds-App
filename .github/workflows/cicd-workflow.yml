name: Build and Deploy Docker Images to EC2

on:
  push:
    branches:
      - master
jobs:
  # build:
  #   runs-on: ubuntu-latest

  #   steps:

  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Login to Docker Hub
  #       run: echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

  #     - name: Build and push client Docker image
  #       working-directory: ./client
  #       run: |
  #         docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/dailydeeds_client:latest .
  #         docker push ${{ secrets.DOCKERHUB_USERNAME }}/dailydeeds_client:latest

  #     - name: Build and push server Docker image
  #       working-directory: ./server
  #       run: |
  #         docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/dailydeeds_server:latest .
  #         docker push ${{ secrets.DOCKERHUB_USERNAME }}/dailydeeds_server:latest

  deploy:
    runs-on: ubuntu-latest
    # needs: build

    steps:

      - name: Checkout source code
        uses: actions/checkout@v3

      - name: copy file via ssh password
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST_DNS}}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "docker-compose.yaml"
          target: "~/"

      - name: EC2 SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.HOST_DNS }}
          username: ${{ secrets.USERNAME }}
          key: ${{  secrets.EC2_SSH_KEY }}
          script: |
            docker-compose up -d

      # - name: Use SSH to deploy
      #   env:
      #     SSH_KEY: ${{secrets.EC2_SSH_KEY}}
      #   # uses: github/ssh-action@latest
      #   # with:
      #   #   host: ${{ secrets.HOST_DNS }}
      #   #   username: ${{ secrets.USERNAME }}
      #   #   key: ${{ secrets.EC2_SSH_KEY }}
      #   run: |
      #     echo "$SSH_KEY" >> secret.pem
      #     chmod 777 secret.pem
      #     cat secret.pem
      #     scp -i  secret.pem docker-compose.yaml  ${{ secrets.USERNAME }}@${{ secrets.HOST_DNS }}:~
          # ls
              

  

           




      # - name: Copy .env and docker-compose.yaml to EC2
      #   run: scp -i ${{ secrets.SSH_PRIVATE_KEY }} .env docker-compose.yaml ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOSTNAME }}:/app/

      # - name: Connect to EC2 and manage Docker containers
      #   run: ssh -i ${{ secrets.SSH_PRIVATE_KEY }} ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOSTNAME }} "cd /app/ && docker-compose down && docker-compose up -d"

# name: Build and Deploy Docker Images to EC2

# on:
#   push:
#     branches:
#       - master

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
      
#       - name: Create .env file
#         run: |
#           echo "DATABASE_HOST=$DATABASE_HOST" >> .env
#           echo "DATABASE_PORT=$DATABASE_PORT" >> .env
#           echo "DATABASE_USER=$DATABASE_USER" >> .env
#           echo "DATABASE_PASSWORD=$DATABASE_PASSWORD" >> .env
#           echo "DATABASE_NAME=$DATABASE_NAME" >> .env

#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Login to Docker Hub
#         run: echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

#       - name: Build and push client Docker image
#         working-directory: ./client
#         run: |
#           docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/dailydeeds_client:latest .
#           docker push ${{ secrets.DOCKERHUB_USERNAME }}/dailydeeds_client:latest

#       - name: Build and push server Docker image
#         working-directory: ./server
#         run: |
#           docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/dailydeeds_server:latest .
#           docker push ${{ secrets.DOCKERHUB_USERNAME }}/dailydeeds_server:latest

#   deploy:
#     runs-on: ubuntu-latest
#     needs: build

#     steps:
#       - name: Setup Docker
#         uses: actions/setup-docker@v3
#         with:
#           docker_version: 'latest'

#       - name: Connect to EC2
#         uses: aws-actions/configure-aws-credentials@v4
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: eu-west-2

#       - name: Upload Docker Compose file
#         uses: actions/upload-artifact@v3
#         with:
#           name: docker-compose.yaml
#           path: docker-compose.yaml

#       - name: Upload .env file
#         uses: actions/upload-artifact@v3
#         with:
#           name: .env
#           path: .env

#       - name: Down existing Docker images
#         run: docker-compose down

#       - name: Up new Docker images
#         run: docker-compose up -d







# name: Build and Deploy Docker Images

# on:
#   push:
#     branches:
#       - master

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Login to Docker Hub
#         run: echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

#       - name: Build and push client Docker image
#         working-directory: ./client
#         run: |
#           docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/dailydeeds_client:latest .
#           docker push ${{ secrets.DOCKERHUB_USERNAME }}/dailydeeds_client:latest

#       - name: Build and push server Docker image
#         working-directory: ./server
#         run: |
#           docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/dailydeeds_server:latest .
#           docker push ${{ secrets.DOCKERHUB_USERNAME }}/dailydeeds_server:latest

#   deploy:
#     runs-on: ubuntu-latest
#     needs: build

#     steps:
#       - name: Setup Docker
#         uses: actions/setup-docker@v2
#         with:
#           docker_version: "latest"

#       - name: Connect to EC2
#         uses: actions/aws-cli@v3
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           region: us-east-1

#       - name: Upload Docker Compose file
#         uses: actions/upload-artifact@v3
#         with:
#           name: docker-compose.yml
#           path: docker-compose.yml

#       - name: Run Docker Compose
#         run: |
#           docker-compose up -d

# name: Build and Push Docker Images

# on:
#   push:
#     branches:
#       - master

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Login to Docker Hub
#         run: echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

#       - name: Build and push client Docker image
#         working-directory: ./client
#         run: |
#           docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/dailydeeds_client:latest .
#           docker push ${{ secrets.DOCKERHUB_USERNAME }}/dailydeeds_client:latest

#       - name: Build and push server Docker image
#         working-directory: ./server
#         run: |
#           docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/dailydeeds_server:latest .
#           docker push ${{ secrets.DOCKERHUB_USERNAME }}/dailydeeds_server:latest
