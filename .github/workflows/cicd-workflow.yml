name: Build and Deploy Docker Images to EC2

on:
  push:
    branches:
      - master
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set REACT_APP_SERVERURL
        run: |
          echo 'REACT_APP_SERVERURL=${{ secrets.REACT_APP_SERVERURL }}' > .env
        working-directory: ./client

      - name: Login to Docker Hub
        run: echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Build and push client Docker image
        working-directory: ./client
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/dailydeeds_client:latest .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/dailydeeds_client:latest

      - name: Build and push server Docker image
        working-directory: ./server
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/dailydeeds_server:latest .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/dailydeeds_server:latest

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build

  #   steps:
  #     - name: Checkout source code
  #       uses: actions/checkout@v3

  #     - name: copy file via ssh password
  #       uses: appleboy/scp-action@master
  #       with:
  #         host: ${{ secrets.HOST_DNS}}
  #         username: ${{ secrets.USERNAME }}
  #         key: ${{ secrets.EC2_SSH_KEY }}
  #         source: "docker-compose.yaml"
  #         target: "~/"

      # - name: EC2 SSH
      #   uses: appleboy/ssh-action@v1.0.0
      #   with:
      #     host: ${{ secrets.HOST_DNS }}
      #     username: ${{ secrets.USERNAME }}
      #     key: ${{  secrets.EC2_SSH_KEY }}
      #     script: |
      #       # Stop and remove the previous containers
      #       docker-compose down

      #       docker-compose up -d



      